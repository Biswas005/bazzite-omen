---
name: Build Bazzite-Omen ISO
# This workflow builds the Bazzite-Omen ISO images using bootc-image-builder

on:
  workflow_dispatch:
    inputs:
      upload-to-s3:
        description: "Upload to S3"
        required: false
        default: false
        type: boolean
      platform:
        required: true
        type: choice
        options:
          - amd64
          - arm64
  pull_request:
    branches:
      - main
    paths:
      - './iso.toml'
      - './.github/workflows/build-iso.yml'
      - './Justfile'
      - './Containerfile'
  push:
    branches:
      - main
    paths:
      - './iso.toml'
      - './Containerfile'

env:
  IMAGE_NAME: "bazzite-omen"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  DEFAULT_TAG: "latest"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.platform }}
  cancel-in-progress: true

jobs:
  build-iso:
    name: Build Bazzite-Omen ISO (${{ inputs.platform || 'amd64' }})
    runs-on: ${{ (inputs.platform == 'arm64' || matrix.platform == 'arm64') && 'ubuntu-24.04-arm64' || 'ubuntu-24.04' }}
    
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ inputs.platform && fromJson(format('["{0}"]', inputs.platform)) || fromJson('["amd64"]') }}

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Lowercase registry
        run: |
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
      
      - name: Install dependencies (ARM64)
        if: matrix.platform == 'arm64'
        run: |
          set -x
          sudo apt update -y
          sudo apt install -y podman

      - name: Maximize build space (AMD64)
        if: matrix.platform != 'arm64'
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Build Bazzite-Omen ISO
        id: build
        uses: ublue-os/bootc-image-builder-action@main
        with:
          bootc-image-builder-image: quay.io/ublue-os/bootc-image-builder:latest
          use-librepo: true
          rootfs: btrfs
          config-file: ./iso.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
          architecture: ${{ matrix.platform }}

      - name: Move and rename ISO files
        if: steps.build.outcome == 'success'
        shell: bash
        run: |
          # Create a descriptive filename
          ISO_NAME="bazzite-omen-${{ steps.date.outputs.date }}-${{ matrix.platform }}"
          
          # Find the ISO file and rename it
          if [ -f "${{ steps.build.outputs.output-directory }}/bootiso/install.iso" ]; then
            mv "${{ steps.build.outputs.output-directory }}/bootiso/install.iso" \
               "${{ steps.build.outputs.output-directory }}/${ISO_NAME}.iso"
          fi
          
          # Create checksums
          cd "${{ steps.build.outputs.output-directory }}"
          if [ -f "${ISO_NAME}.iso" ]; then
            sha256sum "${ISO_NAME}.iso" > "${ISO_NAME}.iso.sha256"
            echo "iso_filename=${ISO_NAME}.iso" >> $GITHUB_OUTPUT
          fi
        id: rename

      - name: Upload ISO to Job Artifacts
        if: steps.build.outcome == 'success' && inputs.upload-to-s3 != true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: bazzite-omen-iso-${{ steps.date.outputs.date }}-${{ matrix.platform }}
          path: |
            ${{ steps.build.outputs.output-directory }}/*.iso
            ${{ steps.build.outputs.output-directory }}/*.sha256
          if-no-files-found: error
          retention-days: 30
          compression-level: 0
          overwrite: true
      
      - name: Upload to S3
        if: steps.build.outcome == 'success' && inputs.upload-to-s3 == true && github.event_name != 'pull_request'
        shell: bash
        env:
          RCLONE_CONFIG_S3_TYPE: s3
          RCLONE_CONFIG_S3_PROVIDER: ${{ secrets.S3_PROVIDER }}
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_S3_REGION: ${{ secrets.S3_REGION }}
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          SOURCE_DIR: ${{ steps.build.outputs.output-directory }}
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone
          
          # Upload ISOs and checksums with proper naming
          rclone copy $SOURCE_DIR S3:${{ secrets.S3_BUCKET_NAME }}/bazzite-omen/iso/ \
            --include "*.iso" --include "*.sha256" \
            --s3-chunk-size 64M \
            --transfers 4

      - name: Create Release Summary
        if: steps.build.outcome == 'success'
        run: |
          echo "## ðŸŽ‰ Bazzite-Omen ISO Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Base Image**: Bazzite NVIDIA" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: HP Omen Gaming Laptops" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "${{ steps.rename.outputs.iso_filename }}" ]; then
            echo "### Generated Files:" >> $GITHUB_STEP_SUMMARY
            echo "- ISO: \`${{ steps.rename.outputs.iso_filename }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- Checksum: \`${{ steps.rename.outputs.iso_filename }}.sha256\`" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ inputs.upload-to-s3 }}" == "true" ]; then
            echo "- **Status**: âœ… Uploaded to S3" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: âœ… Available in Job Artifacts" >> $GITHUB_STEP_SUMMARY
          fi