---
name: Build Custom Image
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '05 10 * * *'  # 10:05am UTC everyday
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  IMAGE_BASE_NAME: "bazzite-omen"  # Changed from using repo name to custom base name
  IMAGE_DESC: "My Customized Universal Blue Image"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"  # do not edit
  ARTIFACTHUB_LOGO_URL: "https://avatars.githubusercontent.com/u/120078124?s=200&v=4"
  BAZZITE_MODULE_SIGNING_KEY: ${{ secrets.BAZZITE_MODULE_SIGNING_KEY }}
  BAZZITE_MODULE_SIGNING_CRT: ${{ secrets.BAZZITE_MODULE_SIGNING_CRT }}
  BAZZITE_MODULE_SIGNING_DER: ${{ secrets.BAZZITE_MODULE_SIGNING_DER }}

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        image-flavor:
          - name: "regular"
            base: "ghcr.io/ublue-os/bazzite:stable"
            suffix: ""
          - name: "nvidia"
            base: "ghcr.io/ublue-os/bazzite-nvidia:stable"
            suffix: "-nvidia"

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ matrix.image-flavor.name }}
      cancel-in-progress: true

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get current date
        id: date
        run: |
          echo "date=$(date -u +%Y\-%m\-%d\T%H\:%M\:%S\Z)" >> $GITHUB_OUTPUT

      - name: Image Metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        id: metadata
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ matrix.image-flavor.image_name }}
          tags: |
            type=raw,value=latest
            type=raw,value=latest.{{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/refs/heads/main/README.md
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }} (${{ matrix.image-flavor.name }} variant)
            org.opencontainers.image.documentation=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/refs/heads/main/README.md
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/blob/main/Containerfile
            org.opencontainers.image.title=${{ matrix.image-flavor.image_name }}
            org.opencontainers.image.url=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=latest
            io.artifacthub.package.deprecated=false
            io.artifacthub.package.keywords=bootc,ublue,universal-blue,bazzite,${{ matrix.image-flavor.name }}
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.logo-url=${{ env.ARTIFACTHUB_LOGO_URL }}
            io.artifacthub.package.prerelease=false
            containers.bootc=1
          sep-tags: " "
          sep-annotations: " "

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ matrix.image-flavor.image_name }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ matrix.image-flavor.base }}
          oci: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@d0603cd0a7dd490be678164909f65c7737470a7f # v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Lowercase Image
        id: image_case
        uses: ASzc/change-string-case-action@d0603cd0a7dd490be678164909f65c7737470a7f # v6
        with:
          string: ${{ matrix.image-flavor.image_name }}

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          registry: ${{ steps.registry_case.outputs.lowercase }}
          image: ${{ steps.image_case.outputs.lowercase }}
          tags: ${{ steps.metadata.outputs.tags }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

      - name: Sign container image
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          IMAGE_FULL="${{ steps.registry_case.outputs.lowercase }}/${{ steps.image_case.outputs.lowercase }}"
          for tag in ${{ steps.metadata.outputs.tags }}; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY $IMAGE_FULL:$tag
          done
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}